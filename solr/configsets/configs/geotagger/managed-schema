<?xml version="1.0" encoding="UTF-8" ?>
<schema name="default-config" version="1.6">
  <!-- attribute "name" is the name of this schema and is only used for display purposes.
     version="x.y" is Solr's version number for the schema syntax and
     semantics.  It should not normally be changed by applications.

     1.0: multiValued attribute did not exist, all fields are multiValued
          by nature
     1.1: multiValued attribute introduced, false by default
     1.2: omitTermFreqAndPositions attribute introduced, true by default
          except for text fields.
     1.3: removed optional field compress feature
     1.4: autoGeneratePhraseQueries attribute introduced to drive QueryParser
          behavior when a single string produces multiple tokens.  Defaults
          to off for version >= 1.4
     1.5: omitNorms defaults to true for primitive field types
          (int, float, boolean, string...)
     1.6: useDocValuesAsStored defaults to true.
  -->

  <!-- field type definitions. The "name" attribute is
     just a label to be used by field definitions.  The "class"
     attribute and any other attributes determine the real
     behavior of the fieldType.
       Class names starting with "solr" refer to java classes in a
     standard package such as org.apache.solr.analysis
  -->

  <!-- sortMissingLast and sortMissingFirst attributes are optional attributes are
       currently supported on types that are sorted internally as strings
       and on numeric types.
     This includes "string", "boolean", "pint", "pfloat", "plong", "pdate", "pdouble".
     - If sortMissingLast="true", then a sort on this field will cause documents
       without the field to come after documents with the field,
       regardless of the requested sort order (asc or desc).
     - If sortMissingFirst="true", then a sort on this field will cause documents
       without the field to come before documents with the field,
       regardless of the requested sort order.
     - If sortMissingLast="false" and sortMissingFirst="false" (the default),
       then default lucene sorting will be used which places docs without the
       field first in an ascending sort and last in a descending sort.
  -->

  <!-- The StrField type is not analyzed, but indexed/stored verbatim. -->
  <fieldType name="string" class="solr.StrField" sortMissingLast="true" docValues="true"/>
  <fieldType name="strings" class="solr.StrField" sortMissingLast="true" multiValued="true" docValues="true"/>

  <!-- boolean type: "true" or "false" -->
  <fieldType name="boolean" class="solr.BoolField" sortMissingLast="true"/>
  <fieldType name="booleans" class="solr.BoolField" sortMissingLast="true" multiValued="true"/>

  <!--
    Numeric field types that index values using KD-trees.
    Point fields don't support FieldCache, so they must have docValues="true" if needed for sorting, faceting, functions, etc.
  -->
  <fieldType name="pint" class="solr.IntPointField" docValues="true"/>
  <fieldType name="pfloat" class="solr.FloatPointField" docValues="true"/>
  <fieldType name="plong" class="solr.LongPointField" docValues="true"/>
  <fieldType name="pdouble" class="solr.DoublePointField" docValues="true"/>

  <fieldType name="pints" class="solr.IntPointField" docValues="true" multiValued="true"/>
  <fieldType name="pfloats" class="solr.FloatPointField" docValues="true" multiValued="true"/>
  <fieldType name="plongs" class="solr.LongPointField" docValues="true" multiValued="true"/>
  <fieldType name="pdoubles" class="solr.DoublePointField" docValues="true" multiValued="true"/>
  <fieldType name="random" class="solr.RandomSortField" indexed="true"/>

  <!-- since fields of this type are by default not stored or indexed,
     any data added to them will be ignored outright.  -->
  <fieldType name="ignored" stored="false" indexed="false" multiValued="true" class="solr.StrField"/>

  <!-- The format for this date field is of the form 1995-12-31T23:59:59Z, and
       is a more restricted form of the canonical representation of dateTime
       http://www.w3.org/TR/xmlschema-2/#dateTime
       The trailing "Z" designates UTC time and is mandatory.
       Optional fractional seconds are allowed: 1995-12-31T23:59:59.999Z
       All other components are mandatory.

       Expressions can also be used to denote calculations that should be
       performed relative to "NOW" to determine the value, ie...

             NOW/HOUR
                ... Round to the start of the current hour
             NOW-1DAY
                ... Exactly 1 day prior to now
             NOW/DAY+6MONTHS+3DAYS
                ... 6 months and 3 days in the future from the start of
                    the current day

    -->
  <!-- KD-tree versions of date fields -->
  <fieldType name="pdate" class="solr.DatePointField" docValues="true"/>
  <fieldType name="pdates" class="solr.DatePointField" docValues="true" multiValued="true"/>

  <!--Binary data type. The data should be sent/retrieved in as Base64 encoded Strings -->
  <fieldType name="binary" class="solr.BinaryField"/>

  <!-- solr.TextField allows the specification of custom text analyzers
       specified as a tokenizer and a list of token filters. Different
       analyzers may be specified for indexing and querying.

       The optional positionIncrementGap puts space between multiple fields of
       this type on the same document, with the purpose of preventing false phrase
       matching across fields.

       For more info on customizing your analyzer chain, please see
       http://lucene.apache.org/solr/guide/understanding-analyzers-tokenizers-and-filters.html#understanding-analyzers-tokenizers-and-filters
   -->

  <!-- One can also specify an existing Analyzer class that has a
       default constructor via the class attribute on the analyzer element.
       Example:
  <fieldType name="text_greek" class="solr.TextField">
    <analyzer class="org.apache.lucene.analysis.el.GreekAnalyzer"/>
  </fieldType>
  -->

  <!-- This point type indexes the coordinates as separate fields (subFields)
    If subFieldType is defined, it references a type, and a dynamic field
    definition is created matching *___<typename>.  Alternately, if
    subFieldSuffix is defined, that is used to create the subFields.
    Example: if subFieldType="double", then the coordinates would be
      indexed in fields myloc_0___double,myloc_1___double.
    Example: if subFieldSuffix="_d" then the coordinates would be indexed
      in fields myloc_0_d,myloc_1_d
    The subFields are an implementation detail of the fieldType, and end
    users normally should not need to know about them.
   -->
  <dynamicField name="*_point" type="point" indexed="true" stored="true"/>
  <fieldType name="point" class="solr.PointType" dimension="2" subFieldSuffix="_d"/>

  <!-- A specialized field for geospatial search filters and distance sorting. -->
  <fieldType name="location" class="solr.LatLonPointSpatialField" docValues="true"/>

  <!-- A geospatial field type that supports multiValued and polygon shapes.
    For more information about this and other spatial fields see:
    http://lucene.apache.org/solr/guide/spatial-search.html
  -->
  <fieldType name="location_rpt" class="solr.SpatialRecursivePrefixTreeFieldType"
             geo="true" distErrPct="0.025" maxDistErr="0.001" distanceUnits="kilometers"/>

  <!-- Payloaded field types -->
  <fieldType name="delimited_payloads_float" stored="false" indexed="true" class="solr.TextField">
    <analyzer>
      <tokenizer class="solr.WhitespaceTokenizerFactory"/>
      <filter class="solr.DelimitedPayloadTokenFilterFactory" encoder="float"/>
    </analyzer>
  </fieldType>
  <fieldType name="delimited_payloads_int" stored="false" indexed="true" class="solr.TextField">
    <analyzer>
      <tokenizer class="solr.WhitespaceTokenizerFactory"/>
      <filter class="solr.DelimitedPayloadTokenFilterFactory" encoder="integer"/>
    </analyzer>
  </fieldType>
  <fieldType name="delimited_payloads_string" stored="false" indexed="true" class="solr.TextField">
    <analyzer>
      <tokenizer class="solr.WhitespaceTokenizerFactory"/>
      <filter class="solr.DelimitedPayloadTokenFilterFactory" encoder="identity"/>
    </analyzer>
  </fieldType>

  <fieldType name="tag" class="solr.TextField" postingsFormat="FST50" omitNorms="true" omitTermFreqAndPositions="true">
    <analyzer type="index">
      <tokenizer class="solr.StandardTokenizerFactory"/>
      <filter class="solr.EnglishPossessiveFilterFactory"/>
      <filter class="solr.ASCIIFoldingFilterFactory"/>
      <filter class="solr.LowerCaseFilterFactory"/>
      <filter class="solr.ConcatenateGraphFilterFactory" preservePositionIncrements="false"/>
    </analyzer>
    <analyzer type="query">
      <tokenizer class="solr.StandardTokenizerFactory"/>
      <filter class="solr.EnglishPossessiveFilterFactory"/>
      <filter class="solr.ASCIIFoldingFilterFactory"/>
      <filter class="solr.LowerCaseFilterFactory"/>
    </analyzer>
  </fieldType>

  <field name="_root_" type="string" docValues="false" indexed="true" stored="false"/>
  <field name="_version_" type="plong" indexed="false" stored="false"/>

  <!-- Field to use to determine and enforce document uniqueness.
     Unless this field is marked with required="false", it will be a required field
   -->
  <uniqueKey>id</uniqueKey>
<!--  geonameid         : integer id of record in geonames database-->
  <field name="id" type="string" multiValued="false" indexed="true" required="true" stored="true"/>
<!--  name              : name of geographical point (utf8) varchar(200)-->
  <field name="name" type="string"/>
<!--  asciiname         : name of geographical point in plain ascii characters, varchar(200)-->
  <field name="ascii_name" type="string"/>
<!--  alternatenames    : alternatenames, comma separated, ascii names automatically transliterated, convenience attribute from alternatename table, varchar(10000)-->
  <field name="alternative_names" type="strings"/>
<!--  latitude          : latitude in decimal degrees (wgs84)-->
  <field name="latitude" type="pfloat"/>
<!--  longitude         : longitude in decimal degrees (wgs84)-->
  <field name="longitude" type="pfloat"/>
<!--  feature class     : see http://www.geonames.org/export/codes.html, char(1)-->
  <field name="feature_class" type="string"/>
<!--  feature code      : see http://www.geonames.org/export/codes.html, varchar(10)-->
  <field name="feature_code" type="string"/>
<!--  country code      : ISO-3166 2-letter country code, 2 characters-->
  <field name="country_code" type="string"/>
<!--  cc2               : alternate country codes, comma separated, ISO-3166 2-letter country code, 200 characters-->
  <field name="cc2" type="string"/>
<!--  admin1 code       : fipscode (subject to change to iso code), see exceptions below, see file admin1Codes.txt for display names of this code; varchar(20)-->
  <field name="admin1" type="string"/>
<!--  admin2 code       : code for the second administrative division, a county in the US, see file admin2Codes.txt; varchar(80) -->
  <field name="admin2" type="string"/>
<!--  admin3 code       : code for third level administrative division, varchar(20)-->
  <field name="admin3" type="string"/>
<!--  admin4 code       : code for fourth level administrative division, varchar(20)-->
  <field name="admin4" type="string"/>
<!--  population        : bigint (8 byte int) -->
  <field name="population" type="pint"/>
<!--  elevation         : in meters, integer-->
  <field name="elevation" type="pint"/>
<!--  dem               : digital elevation model, srtm3 or gtopo30, average elevation of 3''x3'' (ca 90mx90m) or 30''x30'' (ca 900mx900m) area in meters, integer. srtm processed by cgiar/ciat.-->
  <field name="dem" type="string"/>
<!--  timezone          : the iana timezone id (see file timeZone.txt) varchar(40)-->
  <field name="timezone" type="string"/>
<!--  modification date : date of last modification in yyyy-MM-dd format-->
  <field name="modification_date" type="string"/>

  <field name="name_tag" type="tag" stored="false"/>
  <copyField source="name" dest="name_tag"/>
  <field name="location" type="location"/>
  <field name="location_rpt" type="location_rpt"/>
  <copyField source="location" dest="location_rpt"/>


</schema>
